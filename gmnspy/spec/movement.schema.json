{
    "primaryKey": "mvmt_id",
    "missingValues": [
        "NaN"
    ],
    "fields": [
        {
            "name": "mvmt_id",
            "type": "any",
            "description": "Primary key.",
            "constraints": {
                "required": true
            }
        },
        {
            "name": "node_id",
            "type": "any",
            "foreign_key": "node.node_id",
            "description": "The node representing the junction.",
            "constraints": {
                "required": true
            }
        },
        {
            "name": "name",
            "type": "any",
            "description": "Optional."
        },
        {
            "name": "ib_link_id",
            "type": "any",
            "foreign_key": "link.link_id",
            "description": "Inbound link id.",
            "constraints": {
                "required": true
            }
        },
        {
            "name": "start_ib_lane",
            "type": "integer",
            "description": "Innermost lane number the movement applies to at the inbound end."
        },
        {
            "name": "end_ib_lane",
            "type": "integer",
            "description": "Outermost lane number the movement applies to at the inbound end. Blank indicates a movement with a single inbound lane."
        },
        {
            "name": "ob_link_id",
            "type": "any",
            "foreign_key": "link.link_id",
            "description": "Outbound link id.",
            "constraints": {
                "required": true
            }
        },
        {
            "name": "start_ob_lane",
            "type": "integer",
            "description": "Innermost lane number the movement applies to at the outbound end."
        },
        {
            "name": "end_ob_lane",
            "type": "integer",
            "description": "Outermost lane number the movement applies to at the outbound end. Blank indicates a movement with a single outbound lane."
        },
        {
            "name": "type",
            "type": "string",
            "description": "Optional. Describes the type of movement (left, right, thru, etc.).",
            "constraints": {
                "required": true,
                "enum": [
                    "left",
                    "right",
                    "uturn",
                    "thru",
                    "merge",
                    "diverge"
                ]
            }
        },
        {
            "name": "penalty",
            "type": "any",
            "description": "Turn penalty (seconds)"
        },
        {
            "name": "capacity",
            "type": "any",
            "description": "Capacity in vehicles per hour."
        },
        {
            "name": "ctrl_type",
            "type": "any",
            "description": "Optional. .",
            "constraints": {
                "enum": [
                    "no_control",
                    "yield",
                    "stop",
                    "stop_2_way",
                    "stop_4_way",
                    "signal_with_RTOR",
                    "signal"
                ]
            }
        },
        {
            "name": "mvmt_code",
            "type": "any",
            "description": "Optional. Movement code (e.g., SBL).  Syntax is DDTN, where DD is the direction (e.g., SB, NB, EB, WB, NE, NW, SE, SW). T is the turning movement (e.g., R, L, T) and N is an optional turning movement number (e.g., distinguishing between bearing right and a sharp right at a 6-way intersection)"
        },
        {
            "name": "allowed_uses",
            "type": "string",
            "description": "Optional. Set of allowed uses that should appear in either the use_definition or use_group tables; comma-separated."
        },
        {
            "name": "geometry",
            "type": "any",
            "description": "Optional. Movement geometry, specific format could be WKT, GeoJSON, etc."
        }
    ],
    "name": "movement.schema.json",
    "description": "Describes how inbound and outbound links connect at an intersection."
}
