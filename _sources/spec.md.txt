# GMNS Schema
Schema for General Network Feed Specification.

## Files in Specification

GMNS consists of a package of files as defined in the following table.

**The following table is automatically generated from `gmns.spec.json`**

|    | name                                | description   | required   |
|---:|:------------------------------------|:--------------|:-----------|
|  0 | [`link`](#link)                     |               | True       |
|  1 | [`node`](#node)                     |               | True       |
|  2 | [`link_geometry`](#link_geometry)   |               | False      |
|  3 | [`lane`](#lane)                     |               | False      |
|  4 | [`link_tod`](#link_tod)             |               | False      |
|  5 | [`location`](#location)             |               | True       |
|  6 | [`use_definition`](#use_definition) |               | False      |
|  7 | [`use_group`](#use_group)           |               | False      |

File components for GMNS are specified in `gmns.spec.json` in a format compatible with the
[frictionless data](https://specs.frictionlessdata.io/tabular-data-package/) data package standard.

Example `gmns.spec.json`:
```JSON
{
  "profile": "gmns-data-package",
  "profile_version":0.0,
  "name": "my-dataset",
  "resources": [
   {
     "name":"link",
     "path": "link.csv",
     "schema": "link.schema.json",
     "required": true
   },
   {
     "name":"node",
     "path": "node.csv",
     "schema": "node.schema.json",
     "required": true
   }
 ]
}
```

## Data Table Schemas
Data table schemas are specified in JSON and are compatible with the
[frictionless data](https://specs.frictionlessdata.io/table-schema/) table
schema standards.

Example:

```JSON
{
    "primaryKey": "segment_id",
    "missingValues": ["NaN",""],
    "fields": [
        {
            "name": "segment_id",
            "type": "any",
            "description": "Primary key.",
            "constraints": {
              "required": true,
              "unique": true
              }
        },
        {
            "name": "road_link_id",
            "type": "any",
            "description": "Required. Foreign key to road_links. The link that the segment is located on.",
            "foreign_key": "link.link_id",
            "constraints": {
              "required": true
              }
        },
        {
            "name": "ref_node_id",
            "type": "any",
            "description": "Required. Foreign key to node.",
            "foreign_key": "node.node_id",
            "constraints": {
              "required": true
              }
        },
        {
            "name": "start_lr",
            "type": "number",
            "description": "Required. Distance from ref_node_id.",
            "constraints": {
              "required": true,
              "minimum": 0
              }
        },
        {
            "name": "end_lr",
            "type": "number",
            "description": "Required. Distance from ref_node_id.",
            "constraints": {
              "required": true,
              "minimum": 0
              }
          }
    ]
}

```


## use_definition


|name|required|type|foreign_key|description|constraints minimum|
|---|---|---|---|---|---|
|use|True|string|-|Primary key|-|
|persons_per_vehicle|True|number|-|Required.|0|
|pce|True|number|-|Required. Passenger car equivelent.|0|
|special_conditions|-|string|-|Optional.|-|
|description|-|string|-|Optional |-|


## lane


|name|required|type|foreign_key|description|constraints minimum|
|---|---|---|---|---|---|
|lane_id|True|any|-|Primary key|-|
|road_link_id|-|any|-|Conditionally Required. Foreign key  to  road_link table.|-|
|segment_id|-|any|-|Conditionally Required. Associated segment (Blank = lane traverses entire link) Foreign key (Segment table).|-|
|lane_num|True|integer|-|Required. e.g., -1, 1, 2 (use left-to-right numbering).|-|
|allowed_uses|True|string|-|Required. Set of allowed uses from Use_set: SHOULDER, PARKING, WALK, ALL, BIKE, AUTO, HOV2, HOV3, TRUCK, BUS, etc.|-|
|r_barrier|-|any|-|Optional. Whether a barrier exists to prevent vehicles from changing lanes to the right (default is None)|-|
|l_barrier|-|any|-|Optional. Whether a barrier exists to prevent vehicles from changing lanes to the left (default is None)|-|
|width|-|number|-|Optional. Width of the lane,feet.|0|
|notes|-|string|-|Optional.|-|


## link_tod


|name|required|type|foreign_key|description|
|---|---|---|---|---|
|link_tod_id|True|any|-|Primary key|
|road_link_id|True|any|-|Required. Foreign key, road_link table|
|segment_id|-|any|-|Optional. Foreign key, segment table. If no value is entered, this table row applies to the entire road_link.|
|lane_num|True|Integer|-|Optional. If no value is entered, this table row applies to all of the lanes on the road_link.|
|time_day|True|Any|-|Required. TimeDay_Set Define the availability/role of lane at different dates and times|
|allowed_uses|-|Any|-|Use_Set. Optional.|
|toll|-|Integer|-|Optional. Toll in cents.|
|notes|-|String|-|Optional.|


## use_group


|name|required|type|foreign_key|description|
|---|---|---|---|---|
|use_group|True|string|-|Primary key.|
|uses|True|string|-|Comma-separated list of uses.|
|description|-|string|-|Optional.|


## link


|name|required|type|foreign_key|description|constraints enum|constraints maximum|constraints minimum|warnings maximum|warnings minimum|
|---|---|---|---|---|---|---|---|---|---|
|link_id|True|any|-|Primary key â€“ could be SharedStreets Reference ID|-|-|-|-|-|
|name|-|string|-|Street or Path Name|-|-|-|-|-|
|from_node_id|True|any|Table: `node`, Variable: `node_id`|-|-|-|-|-|-|
|to_node_id|True|any|Table: `node`, Variable: `node_id`|-|-|-|-|-|-|
|link_geom_id|-|any|Table: `link_geometry`, Variable: `link_geom_id`|Optional. Foreign key (Link_Geometry table)|-|-|-|-|-|
|dir_flag|-|integer|-|Optional. 1 = flow follows direction of shapepoints in the Link_Geometry (forward); -1 = flow is against shapepoint direction (backward);  0 = Unspecified.|Allowed Values: `-1,0,1`|-|-|-|-|
|parent_link_id|-|any|-|Optional. Associated link. For example, if this link is a sidewalk, a parent_link_id could represent the roadway it is along.|Allowed Values: `l,i,n,k,_,i,d`|-|-|-|-|
|capacity|-|integer|-|Optional. Capacity (veh / hr / lane)|-|-|0|-|500|
|free_speed|-|integer|-|Optional. Free flow speed mph|-|100|0|75|10|
|lanes|-|integer|-|Number of lanes in the direction of travel|-|-|0|-|-|
|bike_facility|-|string|-|Type of bicycle accommodation: unknown, none, WCL, sharrow, bikelane, cycletrack, offstreet path|Allowed Values: `unknown,none,WCL,sharrow,bikelane,cycletrack,offstreet path`|-|-|-|-|
|ped_facility|-|string|-|Type of pedestrian accommodation: unknown, none, shoulder, sidewalk, offstreet path|Allowed Values: `unknown,none,shoulder,sidewalk,offstreet path`|-|-|-|-|
|parking|-|string|-|Type of parking: unknown, none, parallel, angle, other|Allowed Values: `unknown,none,parallel,angle,other`|-|-|-|-|
|allowed_uses|-|string|-|Set of allowed uses: SHOULDER, PARKING, WALK, ALL, BIKE, AUTO, HOV2, HOV3, TRUCK, BUS, etc. e.g. [AUTO,BIKE]|-|-|-|-|-|
|facility_type|-|string|-|-|-|-|-|-|-|
|grade|-|number|-|% grade, negative is downhill|-|100|-100|25|-25|
|notes|-|any|-|Additional relevant notes|-|-|-|-|-|


## node


|name|required|type|foreign_key|description|
|---|---|---|---|---|
|node_id|True|any|-|Primary key|
|name|-|string|-|Optional|
|x_coord|True|number|-|Required. Coordinate system specified in config file.|
|y_coord|True|number|-|Required. Coordinate system specified in config file.|
|z_coord|True|number|-|Optional. Coordinate system specified in config file.|
|node_type|-|string|-|Optional. What it represents (intersection, transit station, park & ride).|
|ctrl_type|-|string|-|Optional. Intersection control type - one of ControlType_Set.|
|zone_id|-|any|-|Optional. Could be a Transportation Analysis Zone (TAZ) or city, or census tract, or census block.|
|parent_node_id|-|any|Table: ``, Variable: `node_id`|Optional. Associated node. For example, if this node is a sidewalk, a parent_nodek_id could represent the intersection  it is associated with.|


## location


|name|required|type|foreign_key|description|constraints minimum|
|---|---|---|---|---|---|
|loc_id|True|any|-|Primary key. Location ID.|-|
|road_link_id|True|any|-|Required. Road Link ID. Foreign Key from Road_Link.|-|
|offroad_link_id|-|any|-|Required. Offroad Link ID. Foreign Key from Offroad_Link.|-|
|ref_node_id|True|any|-|Required. The From node of the link. Foreign Key from Node.|-|
|lr|True|number|-|Required. Linear Reference of the location, measured as distance along the link from the reference node.  If link_geometry exists, it is used. Otherwise, link geometry is assumed to be a crow-fly distance from A node to B node.|0|
|x_coord|-|number|-|Optional. Linear Reference of the location, measured as distance along the link from the reference node.|-|
|y_coord|-|number|-|Required. Linear Reference of the location, measured as distance along the link from the reference node.|-|
|z_coord|-|number|-|Required.|-|
|loc_type|-|string|-|Optional. What it represents (driveway, bus stop, etc.)|-|
|zone_id|-|string|-|Optional. Foreign Key, Associated zone|-|
|gtfs_stop_id|-|string|-|Optional. Foreign Key to GTFS data. For bus stops and transit station entrances, provides a link to the General Transit Feed Specification.|-|


## segment


|name|required|type|foreign_key|description|constraints enum|constraints minimum|
|---|---|---|---|---|---|---|
|segment_id|True|any|-|Primary key.|-|-|
|road_link_id|True|any|-|Required. Foreign key to road_links. The link that the segment is located on.|-|-|
|ref_node_id|True|any|-|Required. Foreign key to node.|-|-|
|start_lr|True|number|-|Required. Distance from ref_node_id.|-|0|
|end_lr|True|number|-|Required. Distance from ref_node_id.|-|0|
|capacity|-|integer|-|Optional. Capacity (veh/hr)|-|0|
|free_speed|-|integer|-|Optional. Free flow speed (mph)|-|0|
|l_lanes_added|-|integer|-|Optional. # of lanes added on the left of the road link (negative indicates a lane drop).|-|-|
|r_lanes_added|-|integer|-|Optional. # of lanes added on the right of the road link (negative indicates a lane drop).|-|-|
|bike_facility|-|string|-|Optional. Type of bicycle accommodation: unknown,none,wcl, bikelane,cycletrack,wide_shoulder, offstreet_path.|Allowed Values: `unknown,none,wcl,bikelane,cycletrack,wide_shoulder,offstreet_path`|-|
|ped_facility|-|string|-|Optional. Type of pedestrian accommodation: unknown,none,shoulder,sidewalk,offstreet_path.|Allowed Values: `unknown,none,shoulder,sidewalk,offstreet_path`|-|
|parking|-|string|-|Optional. Type of parking: unknown,none,shoulder,sidewalk,offstreet_path.|Allowed Values: `unknown,none,shoulder,sidewalk,offstreet_path`|-|
|allowed_uses|-|string|-|Optional. Set of allowed uses; comma-separated. Foreign key to use_definition or use sets.|-|-|


## link_geometry


|name|required|type|foreign_key|description|constraints minimum|
|---|---|---|---|---|---|
|link_geom_id|True|any|-|Primary key â€“ could be SharedStreets Geometry ID|-|
|name|-|string|-|Optional.|-|
|geometry|-|any|-|Optional. Link geometry, specific format could be WKT, GeoJSON, etc.|-|
|length|-|number|-|Optional. The length of the link, miles.|0.0|
|row_width|-|number|-|Optional. Width of the entire right-of-way. May be useful for predicting what changes might be possible in future years.|0.0|
|jurisdiction|-|string|-|Optional. Owner operator of the physical link.|-|
