{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to GMNSpy\u2019s documentation","text":""},{"location":"#gmnspy","title":"GMNSpy","text":"<p>Python tool for General Modeling Network Specification (GMNS) developed  by Zephyr  Foundation for Travel Analysis.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>git clone https://github.com/e-lo/GMNSpy.git\ncd GMNSpy\npip install .\n</code></pre>"},{"location":"#usage","title":"Usage","text":""},{"location":"#read-a-single-file","title":"Read a single file","text":"<p>Returns a dataframe that conforms to the specified schema and have been  validated.</p> <pre><code>df = gmnspy.in_out.read_gmns_csv(data_filename, schema_file=schemafilename)\n</code></pre>"},{"location":"#read-a-network","title":"Read a network","text":"<p>Returns a dictionary of dataframes that conform to the specified schema  and have been validated.</p> <p>Checks foreign keys between files.</p> <pre><code>net = gmnspy.in_out.read_gmns_network(data_directory, config: \"gmns.spec.json\")\n</code></pre>"},{"location":"#gmns-specification","title":"GMNS specification","text":"<p>A copy of the GMNS specification is kept in the <code>/spec</code> sub-directory as a  series of JSON tables.</p>"},{"location":"#data-table-schemas","title":"Data Table schemas","text":"<p>Data table schemas are specified in JSON and are compatible with the  frictionless data table  schema standards.</p> <p>Example:  <pre><code>{\n\"primaryKey\": \"segment_id\",\n\"missingValues\": [\"NaN\",\"\"],\n\"fields\": [\n{\n\"name\": \"segment_id\",\n\"type\": \"any\",\n\"description\": \"Primary key.\",\n\"constraints\": {\n\"required\": true,\n\"unique\": true\n}\n},\n{\n\"name\": \"road_link_id\",\n\"type\": \"any\",\n\"description\": \"Required. Foreign key to road_links. The link that the segment is located on.\",\n\"foreign_key\": \"link.link_id\",\n\"constraints\": {\n\"required\": true\n}\n},\n{\n\"name\": \"ref_node_id\",\n\"type\": \"any\",\n\"description\": \"Required. Foreign key to node.\",\n\"foreign_key\": \"node.node_id\",\n\"constraints\": {\n\"required\": true\n}\n},\n{\n\"name\": \"start_lr\",\n\"type\": \"number\",\n\"description\": \"Required. Distance from ref_node_id.\",\n\"constraints\": {\n\"required\": true,\n\"minimum\": 0\n}\n},\n{\n\"name\": \"end_lr\",\n\"type\": \"number\",\n\"description\": \"Required. Distance from ref_node_id.\",\n\"constraints\": {\n\"required\": true,\n\"minimum\": 0\n}\n}\n]\n}\n</code></pre></p>"},{"location":"#network-data-config","title":"Network Data Config","text":"<p>Network data schemas are specified in JSON and are compatible with the  frictionless data data package standards.</p> <p>Example:  <pre><code>{\n\"profile\": \"gmns-data-package\",\n\"profile_version\":0.0,\n\"name\": \"my-dataset\",\n\"resources\": [\n{\n\"name\":\"link\",\n\"path\": \"link.csv\",\n\"schema\": \"link.schema.json\",\n\"required\": true\n},\n{\n\"name\":\"node\",\n\"path\": \"node.csv\",\n\"schema\": \"node.schema.json\",\n\"required\": true\n}\n]\n}\n</code></pre></p>"},{"location":"#issues","title":"Issues","text":"<p>Please add issues, bugs, and feature requests to Github.</p>"},{"location":"#roadmap","title":"Roadmap","text":"<p>Current feature roadmap includes:</p> <ul> <li>conversion tools from open street map</li> <li>network connectivity checks</li> <li>auto documentation of schema to markdown files</li> <li>tests tests tests</li> </ul> <p>Feel free to submit pull requests for consideration. See <code>CONTRIBUTING</code> for more detailed instructions.</p>"},{"location":"#credits","title":"Credits","text":"<p>Primary Author: Elizabeth Sall, UrbanLabs LLC</p> <p>Contributing authors and code maintainers:</p> <ul> <li>Pedro Carmago, OuterLoop Consulting</li> <li>Ian Berg, Volpe Center</li> </ul> <p>See all in <code>CONTRIBUTORS.md</code></p>"},{"location":"#license-to-use","title":"License to Use","text":"<p>The code herein is licensed under the Apache License 2.0 as defined in LICENSE file.</p>"},{"location":"api/","title":"Usage","text":""},{"location":"api/#read-a-single-file","title":"Read a single file","text":"<p>Returns a dataframe that conforms to the specified schema and have been validated.</p> <pre><code>df = gmnspy.in_out.read_gmns_csv(data_filename, schema_file=schemafilename)\n</code></pre>"},{"location":"api/#read-a-network","title":"Read a network","text":"<p>Returns a dictionary of dataframes that conform to the specified schema and have been validated.</p> <p>Checks foreign keys between files.</p> <pre><code>net = gmnspy.in_out.read_gmns_network(data_directory, config: \"gmns.spec.json\")\n</code></pre>"},{"location":"api/#api","title":"API","text":""},{"location":"api/#readwrite","title":"Read/Write","text":"<p>::: gmnspy.in_out.read_gmns_csv</p> <p>::: gmnspy.in_out.read_gmns_network</p>"},{"location":"api/#validation","title":"Validation","text":"<p>::: gmnspy.validate</p> <p>::: gmnspy.schema.read_schema</p> <p>::: gmnspy.schema.read_config</p>"},{"location":"api/#conversions","title":"Conversions","text":"<p>TKTK</p>"},{"location":"api/#auto-documentation","title":"Auto Documentation","text":"<p>::: gmnspy.schema.document_schema</p> <p>::: gmnspy.utils.list_to_md_table</p>"},{"location":"architecture/","title":"Architecture","text":"<p>To come.</p>"},{"location":"development/","title":"Development","text":""},{"location":"development/#development_1","title":"Development","text":""},{"location":"development/#basic-setup","title":"Basic Setup","text":"<pre><code>pip install -r dev-requirements.txt\npip install -e .\n</code></pre>"},{"location":"development/#general-process","title":"General Process","text":"<ol> <li>Create an issue</li> <li>Discuss approach</li> <li>Complete contribution in a fork or branch.</li> <li>Submit a pull-request</li> <li>Respond to reviews</li> </ol> <p>Periodically the <code>develop</code> branch will be merged with master and a tagged release will be made and distributed to PyPI.</p> <p>By making any contribution to the projects, contributors self-certify to the Contributor Agreement.</p>"},{"location":"development/#issues","title":"Issues","text":"<ul> <li>Search existing issues to see if your issue has already been brought up.</li> <li>Create new issues to start discussion on a new topic, feature requests, and bugs; linking to any other relevant issues.</li> <li>Fill out issue template to the best of your ability.</li> <li>Indiciate urgency and if you are willing to work on it either using tags or in issue text.</li> </ul> <p>Issues which do not have a clear user story may not be addressed</p>"},{"location":"development/#consensus","title":"Consensus","text":"<p>If issue is not super obvious/straightforward, please discuss approach with the maintainers/owner and reach a consensus.</p> <p>Contributions which do not have consensus with the owner may not be approved</p>"},{"location":"development/#coding","title":"Coding","text":"<p>Get assigned. If you are working on issue, please tag yourself as the assignee (or ask to be tagged if you do not have privledges).</p> <p>Generally:</p> <ul> <li>Try to be backwards compatable to Python 3.10.</li> <li>Be compatable with Numpy 2+, Pandas 2+, OSMNX 1+, PyProj 3.3+</li> <li>Use PEP8 and autoformat with <code>black</code></li> <li>Use Google-style docstrings for all classes and methods</li> <li>Test formatting and autoformat using <code>pre-commit</code></li> <li>Use logging</li> <li>All code should have an associated test</li> <li>Documentation is in the <code>docs</code> folder and is built using <code>mkdocs</code></li> <li>Additions to public API should be documented in <code>docs/api.md</code></li> <li>Changes to architecture should be documented in <code>docs/architecture.md</code></li> <li>Right now, this repo prioritizes Legibility/Simplicity &gt;&gt; Efficiency. That might change later.</li> </ul> <p>Contributions which do not meet these requirements may not be approved</p>"},{"location":"development/#testing-and-ci","title":"Testing and CI","text":"<p>Tests are located in the <code>tests</code> folder and leverage <code>pytest</code></p> <p>Running tests:</p> <pre><code>pytest\n</code></pre> <p>Tests are automatically run when commits are pushed to Github using the <code>.github/workflows/tests.yml</code> workflow.</p>"},{"location":"development/#documentation","title":"Documentation","text":"<p>Documentation uses <code>mkdocs</code> and can be built by:</p> <ol> <li>Install documentation requirements</li> </ol> <pre><code>pip install docs/requirements.txt\n</code></pre> <ol> <li>Building and serving a local copy from the <code>GMNSpy</code> folder</li> </ol> <pre><code>mkdocs serve\n</code></pre> <p>General settings for documentation can be found in <code>mkdocs.yml</code></p> <p>Code associated with including files and auto-generation of spec-related documentation can be found in <code>main.py</code></p> <p>PRs and releases will have a documentation version generated using a github workflow <code>.github/workflows/documentation.yml</code> using the versioning of <code>mkdocs</code> using <code>mike</code> package.</p>"},{"location":"development/#pull-requests","title":"Pull Requests","text":"<p>Use the following guidance in creating and responding to pull requests</p> <ul> <li>Generally, submit PRs to the <code>develop</code> branch.</li> <li>Keep pull requests small and focused. One issue is best.</li> <li>Link Pull Requests to Issues as appropriate.</li> <li>Complete the pull request template as best you can.</li> <li>PRs which don\u2019t pass the automatic checks should either address issues causing them to fail or comment as to why they aren\u2019t.</li> <li>Tag an available reviewer to review your PR.</li> </ul> <p>Pull Requests which do not meet these requirements may not be approved</p>"},{"location":"development/#review-and-approval-process","title":"Review and Approval Process","text":"<ul> <li>PRs which don\u2019t pass the automatic checks should either address issues causing them to fail or comment as to why they aren\u2019t.</li> <li>Tag an available reviewer to review your PR.</li> <li>Respond to conversation and requests</li> </ul> <p>Pull Requests which do not respond to reviews may not be approved</p>"},{"location":"development/#contributor-agreement","title":"Contributor Agreement","text":"<p>By making any contribution to the projects, contributors self-certify to the following Contributor Agreement:</p> <p>By making a contribution to this project, I certify that:</p> <p>a. The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or</p> <p>b. The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or</p> <p>c. The contribution was provided directly to me by some other person who certified (a), (b) or \u00a9 and I have not modified it.</p> <p>d. I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this project or the open source license(s) involved.</p> <p>Attribution: This Contributor Agreement is adapted from the node.js project available here: https://github.com/nodejs/node/blob/main/CONTRIBUTING.md.</p>"},{"location":"development/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":"<p>tl;dr</p> <pre><code>give respect; get respect; or else.\n</code></pre>"},{"location":"development/#our-pledge","title":"Our Pledge","text":"<p>We as GMNSpy Owners, Maintainers, and Contributors pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"development/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people  </li> <li>Being respectful of differing opinions, viewpoints, and experiences  </li> <li>Giving and gracefully accepting constructive feedback  </li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience  </li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others\u2019 private information, such as a physical or email address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"development/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>The community leaders for this effort include project Owner and Maintainers as described in the Contributing documentation.</p> <p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"development/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces.</p>"},{"location":"development/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to @e-lo or other package maintainers.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p>"},{"location":"development/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"development/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"development/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"development/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"development/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"development/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla\u2019s code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"development/#contributors","title":"Contributors","text":"<p>Elizabeth Sall - Owner Pedro Carmago - Maintainer Ian Berg - Contributors</p>"},{"location":"spec/","title":"Macro Rendering Error","text":"<p>File: <code>spec.md</code></p> <p>FrictionlessException: [schema-error] Schema is not valid: descriptor is not valid (Schema is not valid: names of the fields are not unique)</p> <pre><code>Traceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/mkdocs_macros/plugin.py\", line 523, in render\n    return md_template.render(**page_variables)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/jinja2/environment.py\", line 1301, in render\n    self.environment.handle_exception()\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/jinja2/environment.py\", line 936, in handle_exception\n    raise rewrite_traceback_stack(source=source)\n  File \"&lt;template&gt;\", line 102, in top-level template code\n  File \"/home/runner/work/GMNSpy/GMNSpy/main.py\", line 117, in frictionless_schemas\n    return document_schemas_to_md(schema_path)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/GMNSpy/GMNSpy/gmnspy/schema.py\", line 134, in document_schemas_to_md\n    s = frictionless.Schema(sf)\n        ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/frictionless/metadata.py\", line 42, in __call__\n    obj = cls.__create__(*args, **kwargs)  # type: ignore\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/frictionless/schema/schema.py\", line 82, in __create__\n    return cls.from_descriptor(descriptor, **options)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.3/x64/lib/python3.11/site-packages/frictionless/metadata.py\", line 184, in from_descriptor\n    raise FrictionlessException(error, reasons=errors)\nfrictionless.exception.FrictionlessException: [schema-error] Schema is not valid: descriptor is not valid (Schema is not valid: names of the fields are not unique)\n</code></pre>"}]}